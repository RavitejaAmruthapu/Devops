https://www.youtube.com/watch?v=FyAAIHHClqI
------------------------------------------
mkdir <new folder>
cd <new folder>
git init --create new repo
vi <new file1>
git add <new file1>
git commit -m "Created first file"
vi <new file2>
git add <new file2>
git commit -m "Created second file"
git log
git status
git log --all --decorate --oneline --graph
alias graph = "git log --all --decorate --oneline --graph"
git branch b1
git branch b2
git branch
git checkout b1
git status
vi firstfile
add new line and save file
git add firstfile
git commit -m "b1 for first file"
graph
git checkout b2
git branch
vi FirstFile
add new line and save file
git add Firstfile
git commit -m "b2 for First file"
merging is two types 1) Fast Forward merge and 2)3 way merge
In Fast Forward merge, move master head pointer to direct b1
git checkout master
git diff master..b1
git merge b1
cat firstfile
graph
git branch --merged
git branch -d b1
git branch -d b2 --it will warn before delete
git branch -D b2 --recursively delete
git status
git merge b2
git branch -d b2
-------------------------
merge conflicts:

git checkout -b b3
vi FirstFile
git diff
git commit -a -m "Update First File"
git checkout master
vi FirstFile
git commit -a -m "Update First File"
graph
git status
git merge b3
git status
git merge --abort
git merge b3
git status
vi FirstFile and delete or remains conflics in file and save
git status
git commit
save and exit
graph
git branch -d b3
----------------------------
Detached Head State:
moving head pointer to previous commit state
git log
------------------------------------------------
Adding SSH key to gitHub accoutnt for password less accessing:
--------------------------------------------------------------
1)generate key in our system
2)open the public key file in user home directory(/home/teja/.ssh/id_rsa.pub) and copy the the key
3)login to github account
4)click on settings
5)click on ssh keys and new ssh key
6)paste the public key
7)click on add sssh key
8)set the remote url for local repo as "git remote set-url origin git@github.com:<Username>/<Project>.git" ex:git remote set-url origin   git@github.com:RavitejaAmruthapu/Demo.git
9) git push -u origin master
---------------------------------------------------------------------------------------
git log:
---------------------------------------------------------------------------------------
git log -p -2 =>It will show latest two commits
git log --pretty=oneline=> Show commits in one line
git log --pretty=format:"%h - %an, %ar : %s" 
git log --pretty=format:"%h %s" --graph
git log --oneline --decorate --graph --all
----------------------------------------------------------------------------------------
git tag
----------------------------------------------------------------------------------------
git tag=>see how many tags
git push --follows --tags=> Pushing all tags to repository
git tag -a v4.0 -m "Tag created and released for v4.0"  => annonated tag
git log --pretty=format:"%h %s" --graph
git log --pretty=format:"%h - %an, %ar : %s"

Useful options for git log --pretty=format
Option Description of Output
%H      Commit hash
%h      Abbreviated commit hash
%T      Tree hash
%t      Abbreviated tree hash
%P      Parent hashes
%p      Abbreviated parent hashes
%an     Author name
%ae     Author email
%ad     Author date (format respects the --date=option)
%ar     Author date, relative
%cn     Committer name
%ce     Committer email
%cd     Committer date
%cr     Committer date, relative
%s      Subject

Common options to git log
Option Description
-p                       Show the patch introduced with each commit.
--stat                   Show statistics for files modified in each commit.
--shortstat              Display only the changed/insertions/deletions line from the --stat command.
--name-only              Show the list of files modified after the commit information.
--name-status            Show the list of files affected with added/modified/deleted information as well.
--abbrev-commit          Show only the first few characters of the SHA-1 checksum instead of all 40.
--relative-date          Display the date in a relative format (for example, “2 weeks ago”) instead of using the full date format.
--graph                  Display an ASCII graph of the branch and merge history beside the log output.
--pretty                 Show commits in an alternate format. Options include oneline, short, full, fuller,and format (where you specify your own format).
--oneline                Shorthand for --pretty=oneline --abbrev-commit used together.

git log --author "Raviteja" --grep "deleted"

Options to limit the output of git log
Option Description
-<n>                Show only the last n commits
--since, --after    Limit the commits to those made after the specified date.
--until, --before   Limit the commits to those made before the specified date.
--author            Only show commits in which the author entry matches the specified string.
--committer         Only show commits in which the committer entry matches the specified string.
--grep              Only show commits with a commit message containing the string
-S                  Only show commits adding or removing code matching the string

git log --pretty="%h - %s" --author=Raviteja --since="2018-01-01" --before="2018-01-02" --no-merges --t

git log --pretty="%h - %s" --author=Raviteja --since="2018-01-01" --before="2018-01-01" --t

git log --pretty="%h - %s" --author=Raviteja --since="2018-01-01"

git reset HEAD CONTRIBUTING.md       Unstaged changes after reset
---------------------------------------------------------------------------------------------------------------------------
cloneing remote server repo using SSH connection

git clone teja@54.237.145.52:/home/teja/git/Demo
git clone ssh://teja@54.237.145.52/home/teja/git/Demo
